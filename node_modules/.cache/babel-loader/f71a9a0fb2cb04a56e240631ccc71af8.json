{"ast":null,"code":"var _jsxFileName = \"/Users/navdeep/Documents/votingsystem/votingsystem/src/Application.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport PublicRoute from \"./Routes/PublicRoute/PublicRoute\";\nimport PrivateRoute from \"./Routes/PrivateRoute/PrivateRoute\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport LoaderComponent from \"./Components/LoaderCompoent/LoaderCompoent\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { connectUsingWallet } from \"./redux/actions/connect.action\";\nimport { history } from \"./redux/reducers/history\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Application = () => {\n  _s();\n\n  //use dispatch\n  const dispatch = useDispatch();\n  useEffect(() => {\n    onInit();\n  }, []); //get user wallet address from redux\n\n  const user = useSelector(state => state.user.walletAddress ? state.user : false); //function onInit\n\n  const onInit = async () => {\n    if (user !== false) {\n      await dispatch(connectUsingWallet(user === null || user === void 0 ? void 0 : user.wallet));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Router, {\n    history: history,\n    children: [/*#__PURE__*/_jsxDEV(LoaderComponent, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PrivateRoute, {\n      path: `/auth`,\n      component: PrivateRoute\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PublicRoute, {\n      path: `/`,\n      component: PublicRoute\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Application, \"AoYzQbnN3OUDZK1Dv0tLOvW6ivU=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Application;\nexport default Application;\n\nvar _c;\n\n$RefreshReg$(_c, \"Application\");","map":{"version":3,"sources":["/Users/navdeep/Documents/votingsystem/votingsystem/src/Application.js"],"names":["React","useEffect","PublicRoute","PrivateRoute","BrowserRouter","Router","LoaderComponent","useDispatch","useSelector","connectUsingWallet","history","Application","dispatch","onInit","user","state","walletAddress","wallet"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,WAAP,MAAwB,kCAAxB;AACA,OAAOC,YAAP,MAAyB,oCAAzB;AACA,SAASC,aAAa,IAAIC,MAA1B,QAAwC,kBAAxC;AACA,OAAOC,eAAP,MAA4B,4CAA5B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,kBAAT,QAAmC,gCAAnC;AACA,SAASC,OAAT,QAAwB,0BAAxB;;;AAEA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACxB;AACA,QAAMC,QAAQ,GAAGL,WAAW,EAA5B;AACAN,EAAAA,SAAS,CAAC,MAAM;AACdY,IAAAA,MAAM;AACP,GAFQ,EAEN,EAFM,CAAT,CAHwB,CAOxB;;AACA,QAAMC,IAAI,GAAGN,WAAW,CAAEO,KAAD,IAAWA,KAAK,CAACD,IAAN,CAAWE,aAAX,GAA2BD,KAAK,CAACD,IAAjC,GAAwC,KAApD,CAAxB,CARwB,CAUxB;;AACA,QAAMD,MAAM,GAAG,YAAY;AACzB,QAAIC,IAAI,KAAK,KAAb,EAAoB;AAClB,YAAMF,QAAQ,CAACH,kBAAkB,CAACK,IAAD,aAACA,IAAD,uBAACA,IAAI,CAAEG,MAAP,CAAnB,CAAd;AACD;AACF,GAJD;;AAOA,sBACE,QAAC,MAAD;AAAQ,IAAA,OAAO,EAAEP,OAAjB;AAAA,4BACE,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,YAAD;AAAc,MAAA,IAAI,EAAG,OAArB;AAA6B,MAAA,SAAS,EAAEP;AAAxC;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,WAAD;AAAa,MAAA,IAAI,EAAG,GAApB;AAAwB,MAAA,SAAS,EAAED;AAAnC;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CA1BD;;GAAMS,W;UAEaJ,W,EAMJC,W;;;KARTG,W;AA4BN,eAAeA,WAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport PublicRoute from \"./Routes/PublicRoute/PublicRoute\";\nimport PrivateRoute from \"./Routes/PrivateRoute/PrivateRoute\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport LoaderComponent from \"./Components/LoaderCompoent/LoaderCompoent\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { connectUsingWallet } from \"./redux/actions/connect.action\";\nimport { history } from \"./redux/reducers/history\";\n\nconst Application = () => {\n  //use dispatch\n  const dispatch = useDispatch();\n  useEffect(() => {\n    onInit();\n  }, []);\n\n  //get user wallet address from redux\n  const user = useSelector((state) => state.user.walletAddress ? state.user : false);\n\n  //function onInit\n  const onInit = async () => {\n    if (user !== false) {\n      await dispatch(connectUsingWallet(user?.wallet));\n    }\n  };\n\n\n  return (\n    <Router history={history} >\n      <LoaderComponent />\n      <PrivateRoute path={`/auth`} component={PrivateRoute} />\n      <PublicRoute path={`/`} component={PublicRoute} />\n\n    </Router>\n  );\n};\n\nexport default Application;\n"]},"metadata":{},"sourceType":"module"}