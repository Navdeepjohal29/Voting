{"ast":null,"code":"import BigNumber from \"big-number\";\nimport moment from \"moment\";\n\nconst convertWithDecimal = (value, decimal) => {\n  if (value > 0) {\n    if (isInt(value)) {\n      value = parseInt(value);\n      value = BigNumber(value).multiply(decimal);\n    } else {\n      value = value * decimal;\n      value = toFixed(value);\n      value = parseInt(value.toString().split(\".\")[0]);\n      value = toFixed(value);\n      value = BigNumber(value);\n    }\n\n    return value.toString();\n  } else {\n    return 0;\n  }\n};\n\nconst toFixed = x => {\n  if (Math.abs(x) < 1.0) {\n    var e = parseInt(x.toString().split(\"e-\")[1]);\n\n    if (e) {\n      x *= Math.pow(10, e - 1);\n      x = \"0.\" + new Array(e).join(\"0\") + x.toString().substring(2);\n    }\n  } else {\n    var e = parseInt(x.toString().split(\"+\")[1]);\n\n    if (e > 20) {\n      e -= 20;\n      x /= Math.pow(10, e);\n      x += new Array(e + 1).join(\"0\");\n    }\n  }\n\n  return x;\n};\n\nconst isInt = n => {\n  return n % 1 === 0;\n};\n\nconst getError = error => {\n  console.log(\"error -\", error);\n  let errorMsg = error && error.message ? error.message : \"Something went wrong\";\n\n  if (errorMsg.indexOf(\"Internal JSON-RPC error\") > -1) {\n    let msg = errorMsg.replace(\"Internal JSON-RPC error.\", \"\");\n    msg = JSON.parse(msg);\n    return msg.message.split(\":\")[2];\n  } else if (errorMsg.indexOf(\"INVALID_ARGUMENT\") > -1) {\n    return errorMsg.split(\"(\")[0];\n  } else {\n    return errorMsg;\n  }\n};\n\nconst custmizeAddress = address => {\n  let firstFive = address.substring(0, 5);\n  let lastFour = address.substr(address.length - 4);\n  return firstFive + \"...\" + lastFour;\n};\n\nconst getCoinType = type => {\n  type = type.toLowerCase();\n  type = type === \"defi\" ? 1 : type === \"chain\" ? 2 : type === \"nft\" ? 3 : 0;\n  return type;\n};\n\nconst fixedToDecimal = function (value) {\n  let decimals = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 2;\n  value = value && parseFloat(value) > 0 ? value.toString().match(/^-?\\d+(?:\\.\\d{0,2})?/)[0] : 0;\n  return value;\n};\n\nconst secondsToDays = sec => {\n  var seconds = parseInt(sec, 10);\n  var days = Math.floor(seconds / (3600 * 24));\n  seconds -= days * 3600 * 24;\n  var hrs = Math.floor(seconds / 3600);\n  seconds -= hrs * 3600;\n  var mnts = Math.floor(seconds / 60);\n  seconds -= mnts * 60;\n  let result = '';\n\n  if (days > 0) {\n    result = result + days + \" days \";\n  }\n\n  if (hrs > 0) {\n    result = result + hrs + \" Hrs \";\n  }\n\n  if (mnts > 0) {\n    result = result + mnts + \" Minutes \";\n  }\n\n  if (seconds > 0) {\n    result = result + seconds + \" Seconds\";\n  }\n\n  return result;\n};\n\nconst calculateTimeLeft = async timestamp => {\n  let timeleft;\n  let data = new Date(timestamp * 1000);\n  let betTime = moment.utc(data);\n  let leftDays = moment.duration(moment(betTime).diff(moment()));\n  let days = parseInt(leftDays.asDays());\n  let hrs = parseInt(leftDays.asHours() % 24);\n  let min = parseInt(leftDays.asMinutes()) % 60;\n  let sec = parseInt(leftDays.asSeconds()) % 60;\n\n  if (days >= 0 && hrs >= 0 && min >= 0 && sec >= 0) {\n    if (days > 0) {\n      timeleft = days + \" d : \" + hrs + \"h : \" + min + \"m : \" + sec + \"s\";\n    } else if (hrs > 0) {\n      timeleft = hrs + \"h : \" + min + \"m : \" + sec + \"s\";\n    } else if (min > 0) {\n      timeleft = min + \"m : \" + sec + \"s\";\n    } else if (sec > 0) {\n      timeleft = sec + \"s\";\n    }\n  } else {\n    timeleft = \"Ended\";\n  }\n\n  return timeleft;\n};\n\nconst getMilliseconds = value => {\n  let data = 60 * 60 * 24 * value;\n  return data;\n};\n\nconst allowOnlyNumber = value => {\n  const regex = /^\\d*\\.?\\d{0,18}$/gm;\n  var re = new RegExp(regex);\n\n  if (re.test(value)) {\n    return true;\n  } else {\n    return false;\n  }\n};\n\nexport const CommonService = {\n  convertWithDecimal,\n  toFixed,\n  getError,\n  custmizeAddress,\n  getCoinType,\n  fixedToDecimal,\n  secondsToDays,\n  calculateTimeLeft,\n  getMilliseconds,\n  allowOnlyNumber\n};","map":{"version":3,"sources":["/Users/navdeep/Documents/votingsystem/votingsystem/src/services/CommonService.js"],"names":["BigNumber","moment","convertWithDecimal","value","decimal","isInt","parseInt","multiply","toFixed","toString","split","x","Math","abs","e","pow","Array","join","substring","n","getError","error","console","log","errorMsg","message","indexOf","msg","replace","JSON","parse","custmizeAddress","address","firstFive","lastFour","substr","length","getCoinType","type","toLowerCase","fixedToDecimal","decimals","parseFloat","match","secondsToDays","sec","seconds","days","floor","hrs","mnts","result","calculateTimeLeft","timestamp","timeleft","data","Date","betTime","utc","leftDays","duration","diff","asDays","asHours","min","asMinutes","asSeconds","getMilliseconds","allowOnlyNumber","regex","re","RegExp","test","CommonService"],"mappings":"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","sourcesContent":["import BigNumber from \"big-number\";\nimport moment from \"moment\";\n\nconst convertWithDecimal = (value, decimal) => {\n  if (value > 0) {\n    if (isInt(value)) {\n      value = parseInt(value);\n      value = BigNumber(value).multiply(decimal);\n    } else {\n      value = value * decimal;\n      value = toFixed(value);\n      value = parseInt(value.toString().split(\".\")[0]);\n      value = toFixed(value);\n      value = BigNumber(value);\n    }\n    return value.toString();\n  } else {\n    return 0;\n  }\n};\n\nconst toFixed = (x) => {\n  if (Math.abs(x) < 1.0) {\n    var e = parseInt(x.toString().split(\"e-\")[1]);\n    if (e) {\n      x *= Math.pow(10, e - 1);\n      x = \"0.\" + new Array(e).join(\"0\") + x.toString().substring(2);\n    }\n  } else {\n    var e = parseInt(x.toString().split(\"+\")[1]);\n    if (e > 20) {\n      e -= 20;\n      x /= Math.pow(10, e);\n      x += new Array(e + 1).join(\"0\");\n    }\n  }\n  return x;\n};\n\nconst isInt = (n) => {\n  return n % 1 === 0;\n};\n\nconst getError = (error) => {\n  console.log(\"error -\", error)\n  let errorMsg =\n    error && error.message ? error.message : \"Something went wrong\";\n  if (errorMsg.indexOf(\"Internal JSON-RPC error\") > -1) {\n    let msg = errorMsg.replace(\"Internal JSON-RPC error.\", \"\");\n    msg = JSON.parse(msg);\n    return msg.message.split(\":\")[2];\n  } else if (errorMsg.indexOf(\"INVALID_ARGUMENT\") > -1) {\n    return errorMsg.split(\"(\")[0];\n  } else {\n    return errorMsg;\n  }\n};\n\nconst custmizeAddress = (address) => {\n  let firstFive = address.substring(0, 5);\n  let lastFour = address.substr(address.length - 4);\n  return firstFive + \"...\" + lastFour;\n};\n\nconst getCoinType = (type) => {\n  type = type.toLowerCase();\n  type = type === \"defi\" ? 1 : type === \"chain\" ? 2 : type === \"nft\" ? 3 : 0;\n  return type;\n};\n\n\nconst fixedToDecimal = (value, decimals = 2) => {\n  value = value && parseFloat(value) > 0 ? value.toString().match(/^-?\\d+(?:\\.\\d{0,2})?/)[0] : 0\n  return value;\n};\n\nconst secondsToDays = (sec) => {\n  var seconds = parseInt(sec, 10);\n  var days = Math.floor(seconds / (3600 * 24));\n  seconds -= days * 3600 * 24;\n  var hrs = Math.floor(seconds / 3600);\n  seconds -= hrs * 3600;\n  var mnts = Math.floor(seconds / 60);\n  seconds -= mnts * 60;\n  let result = '';\n  if (days > 0) {\n    result = result + days + \" days \"\n  }\n  if (hrs > 0) {\n    result = result + hrs + \" Hrs \"\n  }\n  if (mnts > 0) {\n    result = result + mnts + \" Minutes \"\n  }\n  if (seconds > 0) {\n    result = result + seconds + \" Seconds\"\n  }\n  return result;\n};\n\nconst calculateTimeLeft = async (timestamp) => {\n  let timeleft;\n  let data = new Date((timestamp) * 1000);\n  let betTime = moment.utc(data);\n  let leftDays = moment.duration(moment(betTime).diff(moment()));\n  let days = parseInt(leftDays.asDays())\n  let hrs = parseInt(leftDays.asHours() % 24)\n  let min = parseInt(leftDays.asMinutes()) % 60;\n  let sec = parseInt(leftDays.asSeconds()) % 60;\n  if (days >= 0 &&\n    hrs >= 0 &&\n    min >= 0 &&\n    sec >= 0) {\n    if (days > 0) {\n      timeleft = days + \" d : \" + hrs + \"h : \" + min + \"m : \" + sec + \"s\";\n    } else if (hrs > 0) {\n      timeleft = hrs + \"h : \" + min + \"m : \" + sec + \"s\";\n    } else if (min > 0) {\n      timeleft = min + \"m : \" + sec + \"s\";\n    } else if (sec > 0) {\n      timeleft = sec + \"s\";\n    }\n  } else {\n    timeleft = \"Ended\"\n  }\n  return timeleft\n}\n\nconst getMilliseconds = (value) => {\n  let data = 60 * 60 * 24 * value;\n  return data;\n};\n\nconst allowOnlyNumber = (value) => {\n  const regex = /^\\d*\\.?\\d{0,18}$/gm;\n  var re = new RegExp(regex);\n  if (re.test(value)) {\n    return true;\n  } else {\n    return false;\n  }\n};\n\nexport const CommonService = {\n  convertWithDecimal,\n  toFixed,\n  getError,\n  custmizeAddress,\n  getCoinType,\n  fixedToDecimal,\n  secondsToDays,\n  calculateTimeLeft,\n  getMilliseconds,\n  allowOnlyNumber\n};\n"]},"metadata":{},"sourceType":"module"}