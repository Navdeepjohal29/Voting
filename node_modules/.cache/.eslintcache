[{"/Users/navdeep/Documents/votingsystem/votingsystem/src/index.js":"1","/Users/navdeep/Documents/votingsystem/votingsystem/src/App.js":"2","/Users/navdeep/Documents/votingsystem/votingsystem/src/reportWebVitals.js":"3","/Users/navdeep/Documents/votingsystem/votingsystem/src/Application.js":"4","/Users/navdeep/Documents/votingsystem/votingsystem/src/store.js":"5","/Users/navdeep/Documents/votingsystem/votingsystem/src/redux/reducers/history.js":"6","/Users/navdeep/Documents/votingsystem/votingsystem/src/Routes/PrivateRoute/PrivateRoute.js":"7","/Users/navdeep/Documents/votingsystem/votingsystem/src/redux/actions/connect.action.js":"8","/Users/navdeep/Documents/votingsystem/votingsystem/src/Routes/PublicRoute/PublicRoute.js":"9","/Users/navdeep/Documents/votingsystem/votingsystem/src/Components/LoaderCompoent/LoaderCompoent.js":"10","/Users/navdeep/Documents/votingsystem/votingsystem/src/redux/reducers/index.js":"11","/Users/navdeep/Documents/votingsystem/votingsystem/src/constant.js":"12","/Users/navdeep/Documents/votingsystem/votingsystem/src/redux/reducers/loader.js":"13","/Users/navdeep/Documents/votingsystem/votingsystem/src/redux/reducers/user_reducer.js":"14","/Users/navdeep/Documents/votingsystem/votingsystem/src/redux/constant/actionTypes.js":"15","/Users/navdeep/Documents/votingsystem/votingsystem/src/Components/Toast/Toast.js":"16","/Users/navdeep/Documents/votingsystem/votingsystem/src/services/common/CustomNetworkService.js":"17","/Users/navdeep/Documents/votingsystem/votingsystem/src/services/common/web3.service.js":"18","/Users/navdeep/Documents/votingsystem/votingsystem/src/Pages/Login/Login.js":"19","/Users/navdeep/Documents/votingsystem/votingsystem/src/Pages/Home/Declinetab.js":"20","/Users/navdeep/Documents/votingsystem/votingsystem/src/Pages/Home/Livetab.js":"21","/Users/navdeep/Documents/votingsystem/votingsystem/src/Pages/Home/Approvetab.js":"22","/Users/navdeep/Documents/votingsystem/votingsystem/src/Pages/Admin/Dashboard/Dashboard.js":"23","/Users/navdeep/Documents/votingsystem/votingsystem/src/Pages/Admin/Setting/Setting.js":"24","/Users/navdeep/Documents/votingsystem/votingsystem/src/redux/actions/loader.js":"25","/Users/navdeep/Documents/votingsystem/votingsystem/src/Components/Button/Button.js":"26","/Users/navdeep/Documents/votingsystem/votingsystem/src/Components/Commentmodal/Commentmodal.js":"27","/Users/navdeep/Documents/votingsystem/votingsystem/src/Components/Button/ButtonOutline.js":"28","/Users/navdeep/Documents/votingsystem/votingsystem/src/Components/Wrapper/Wrapper.js":"29","/Users/navdeep/Documents/votingsystem/votingsystem/src/Components/AdminWrapper/AdminWrapper.js":"30","/Users/navdeep/Documents/votingsystem/votingsystem/src/Components/Input/Input.js":"31","/Users/navdeep/Documents/votingsystem/votingsystem/src/Common/Deletemodal/Deletemodal.js":"32","/Users/navdeep/Documents/votingsystem/votingsystem/src/Components/ConnectWallet/index.js":"33","/Users/navdeep/Documents/votingsystem/votingsystem/src/Common/Adminsidebar/Adminsidebar.js":"34","/Users/navdeep/Documents/votingsystem/votingsystem/src/Components/Header/Header.js":"35","/Users/navdeep/Documents/votingsystem/votingsystem/src/Common/Leftbar/Leftbar.js":"36","/Users/navdeep/Documents/votingsystem/votingsystem/src/services/CommonService.js":"37","/Users/navdeep/Documents/votingsystem/votingsystem/src/redux/actions/user.action.js":"38","/Users/navdeep/Documents/votingsystem/votingsystem/src/Components/Createmodal/Createmodal.js":"39","/Users/navdeep/Documents/votingsystem/votingsystem/src/services/common/CommonMethodService.js":"40","/Users/navdeep/Documents/votingsystem/votingsystem/src/services/common/InstanceService.js":"41","/Users/navdeep/Documents/votingsystem/votingsystem/src/services/axios.js":"42","/Users/navdeep/Documents/votingsystem/votingsystem/src/constants/apiEndPoint.js":"43","/Users/navdeep/Documents/votingsystem/votingsystem/src/redux/constant/response.js":"44"},{"size":501,"mtime":1647238382000,"results":"45","hashOfConfig":"46"},{"size":851,"mtime":1648120421000,"results":"47","hashOfConfig":"46"},{"size":362,"mtime":1647238382000,"results":"48","hashOfConfig":"46"},{"size":1114,"mtime":1648121603000,"results":"49","hashOfConfig":"46"},{"size":1105,"mtime":1647238382000,"results":"50","hashOfConfig":"46"},{"size":96,"mtime":1648120421000,"results":"51","hashOfConfig":"46"},{"size":465,"mtime":1648199589000,"results":"52","hashOfConfig":"46"},{"size":4385,"mtime":1648120421000,"results":"53","hashOfConfig":"46"},{"size":676,"mtime":1648125278000,"results":"54","hashOfConfig":"46"},{"size":443,"mtime":1648120421000,"results":"55","hashOfConfig":"46"},{"size":549,"mtime":1648120421000,"results":"56","hashOfConfig":"46"},{"size":946,"mtime":1648120421000,"results":"57","hashOfConfig":"46"},{"size":305,"mtime":1647238382000,"results":"58","hashOfConfig":"46"},{"size":705,"mtime":1647238382000,"results":"59","hashOfConfig":"46"},{"size":196,"mtime":1647238382000,"results":"60","hashOfConfig":"46"},{"size":493,"mtime":1647238382000,"results":"61","hashOfConfig":"46"},{"size":1078,"mtime":1648120421000,"results":"62","hashOfConfig":"46"},{"size":2855,"mtime":1648120421000,"results":"63","hashOfConfig":"46"},{"size":1385,"mtime":1648126692000,"results":"64","hashOfConfig":"46"},{"size":5666,"mtime":1648125091000,"results":"65","hashOfConfig":"46"},{"size":7228,"mtime":1650014335000,"results":"66","hashOfConfig":"46"},{"size":5781,"mtime":1648125064000,"results":"67","hashOfConfig":"46"},{"size":2704,"mtime":1648208304000,"results":"68","hashOfConfig":"46"},{"size":1813,"mtime":1648200792000,"results":"69","hashOfConfig":"46"},{"size":118,"mtime":1647238382000,"results":"70","hashOfConfig":"46"},{"size":301,"mtime":1647238382000,"results":"71","hashOfConfig":"46"},{"size":2203,"mtime":1648206379000,"results":"72","hashOfConfig":"46"},{"size":261,"mtime":1647238382000,"results":"73","hashOfConfig":"46"},{"size":527,"mtime":1648121916000,"results":"74","hashOfConfig":"46"},{"size":564,"mtime":1648195210000,"results":"75","hashOfConfig":"46"},{"size":628,"mtime":1648199919000,"results":"76","hashOfConfig":"46"},{"size":1194,"mtime":1648549665000,"results":"77","hashOfConfig":"46"},{"size":2014,"mtime":1648120421000,"results":"78","hashOfConfig":"46"},{"size":1748,"mtime":1648127236000,"results":"79","hashOfConfig":"46"},{"size":3307,"mtime":1648204414000,"results":"80","hashOfConfig":"46"},{"size":1353,"mtime":1648443560000,"results":"81","hashOfConfig":"46"},{"size":3800,"mtime":1648120421000,"results":"82","hashOfConfig":"46"},{"size":2849,"mtime":1654502186000,"results":"83","hashOfConfig":"46"},{"size":4911,"mtime":1648120453000,"results":"84","hashOfConfig":"46"},{"size":5238,"mtime":1648120421000,"results":"85","hashOfConfig":"46"},{"size":4156,"mtime":1648120421000,"results":"86","hashOfConfig":"46"},{"size":4607,"mtime":1648120421000,"results":"87","hashOfConfig":"46"},{"size":58,"mtime":1648120421000,"results":"88","hashOfConfig":"46"},{"size":45,"mtime":1648120421000,"results":"89","hashOfConfig":"46"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1u5pjln",{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109"},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128"},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131"},{"filePath":"132","messages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134"},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137"},{"filePath":"138","messages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140"},{"filePath":"141","messages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145"},{"filePath":"146","messages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"150","messages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152"},{"filePath":"153","messages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"155","messages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157"},{"filePath":"158","messages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"160","messages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"162","messages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164"},{"filePath":"165","messages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"167","messages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169"},{"filePath":"170","messages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172"},{"filePath":"173","messages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175"},{"filePath":"176","messages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178"},{"filePath":"179","messages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"181","messages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183"},{"filePath":"184","messages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"186","messages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188"},{"filePath":"189","messages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"191","messages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"193","messages":"194","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/navdeep/Documents/votingsystem/votingsystem/src/index.js",[],"/Users/navdeep/Documents/votingsystem/votingsystem/src/App.js",[],"/Users/navdeep/Documents/votingsystem/votingsystem/src/reportWebVitals.js",[],"/Users/navdeep/Documents/votingsystem/votingsystem/src/Application.js",["195"],"import React, { useEffect } from \"react\";\nimport PublicRoute from \"./Routes/PublicRoute/PublicRoute\";\nimport PrivateRoute from \"./Routes/PrivateRoute/PrivateRoute\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport LoaderComponent from \"./Components/LoaderCompoent/LoaderCompoent\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { connectUsingWallet } from \"./redux/actions/connect.action\";\nimport { history } from \"./redux/reducers/history\";\n\nconst Application = () => {\n  //use dispatch\n  const dispatch = useDispatch();\n  useEffect(() => {\n    onInit();\n  }, []);\n\n  //get user wallet address from redux\n  const user = useSelector((state) => state.user.walletAddress ? state.user : false);\n\n  //function onInit\n  const onInit = async () => {\n    if (user !== false) {\n      await dispatch(connectUsingWallet(user?.wallet));\n    }\n  };\n\n\n  return (\n    <Router history={history} >\n      <LoaderComponent />\n      <PrivateRoute path={`/auth`} component={PrivateRoute} />\n      <PublicRoute path={`/`} component={PublicRoute} />\n\n    </Router>\n  );\n};\n\nexport default Application;\n","/Users/navdeep/Documents/votingsystem/votingsystem/src/store.js",[],"/Users/navdeep/Documents/votingsystem/votingsystem/src/redux/reducers/history.js",[],"/Users/navdeep/Documents/votingsystem/votingsystem/src/Routes/PrivateRoute/PrivateRoute.js",[],"/Users/navdeep/Documents/votingsystem/votingsystem/src/redux/actions/connect.action.js",[],"/Users/navdeep/Documents/votingsystem/votingsystem/src/Routes/PublicRoute/PublicRoute.js",["196"],"import React, { useState } from \"react\";\nimport { Routes, Route } from 'react-router-dom';\nimport Declinetab from \"../../Pages/Home/Declinetab\";\nimport Livetab from \"../../Pages/Home/Livetab\";\nimport Approvetab from \"../../Pages/Home/Approvetab\";\n\nimport Login from \"../../Pages/Login/Login\";\nconst PublicRoute = (props) => {\n\n  return (\n    <>\n\n      <Routes>\n        <Route path={`/declined`} element={<Declinetab />}></Route>\n        <Route path={`/approved`} element={<Approvetab />}></Route>\n        <Route path={`/`} element={<Livetab />}></Route>\n        <Route path={`/login`} element={<Login />}></Route>\n\n      </Routes>\n    </>\n  );\n};\n\n\nexport default PublicRoute;","/Users/navdeep/Documents/votingsystem/votingsystem/src/Components/LoaderCompoent/LoaderCompoent.js",[],"/Users/navdeep/Documents/votingsystem/votingsystem/src/redux/reducers/index.js",[],"/Users/navdeep/Documents/votingsystem/votingsystem/src/constant.js",[],"/Users/navdeep/Documents/votingsystem/votingsystem/src/redux/reducers/loader.js",[],"/Users/navdeep/Documents/votingsystem/votingsystem/src/redux/reducers/user_reducer.js",[],"/Users/navdeep/Documents/votingsystem/votingsystem/src/redux/constant/actionTypes.js",[],"/Users/navdeep/Documents/votingsystem/votingsystem/src/Components/Toast/Toast.js",[],"/Users/navdeep/Documents/votingsystem/votingsystem/src/services/common/CustomNetworkService.js",[],"/Users/navdeep/Documents/votingsystem/votingsystem/src/services/common/web3.service.js",["197"],"import Web3 from \"web3\";\nimport { toast } from \"../../Components/Toast/Toast\";\n\n\n/**\n * @function: callWeb3\n * @returns\n */\n\nconst callWeb3 = async (type) => {\n\ttry {\n\t\tconst { BinanceChain, ethereum } = window;\n\t\tlet web3Object;\n\n\t\tif (type === \"BINANCE\") {\n\t\t\tif (BinanceChain && (await BinanceChain.isConnected())) {\n\t\t\t\tweb3Object = new Web3(BinanceChain);\n\t\t\t} else {\n\t\t\t\ttoast.info(\"Please install Binance Chain extention\");\n\t\t\t}\n\t\t} else if (type === \"METAMASK\") {\n\t\t\tif (ethereum && ethereum.isMetaMask) {\n\t\t\t\tweb3Object = new Web3(ethereum);\n\t\t\t} else {\n\t\t\t\ttoast.info(\"Please install metamask extention\");\n\t\t\t}\n\t\t} else if (ethereum) {\n\t\t\tweb3Object = new Web3(ethereum);\n\t\t} else if (Web3) {\n\t\t\tweb3Object = new Web3(ethereum);\n\t\t} else {\n\t\t\tweb3Object = new Web3(ethereum);\n\t\t}\n\t\treturn web3Object;\n\t} catch (error) {\n\t\treturn error;\n\t}\n};\n\n/**=\n * @function: CallContract\n * @param {JSON Object} abi\n * @param {String} contractAddress\n * @returns\n */\n\nconst CallContract = async (walletType, abi, contractAddress) => {\n\ttry {\n\t\tlet contractObject;\n\t\tconst web3Object = await callWeb3(walletType);\n\t\tcontractObject = new web3Object.eth.Contract(abi, contractAddress);\n\t\treturn contractObject;\n\t} catch (error) {\n\t\treturn error;\n\t}\n};\n\n/**\n * @function: web3\n * @returns: web3Oject\n */\nconst web3 = async () => {\n\treturn await callWeb3();\n};\n\n/**\n * @function: isBnbInsstalled\n * @returns  BINANCE_WALLET, TRUST_WALLET, NONE\n */\nconst isWalletInstalled = async (type) => {\n\tconst { BinanceChain, web3, ethereum } = window;\n\tlet result = false;\n\tif (type === \"METAMASK\") {\n\t\tconst isInstalled = Boolean(ethereum && ethereum.isMetaMask);\n\t\tif (isInstalled) {\n\t\t\tresult = type;\n\t\t}\n\t} else if (type === \"BINANCE\") {\n\t\tconst isInstalled = Boolean(\n\t\t\tBinanceChain && (await BinanceChain.isConnected())\n\t\t);\n\t\tif (isInstalled) {\n\t\t\tresult = type;\n\t\t}\n\t}\n\n\tif (result === \"BINANCE\") {\n\t\treturn \"BINANCE_WALLET\";\n\t} else if (\"METAMASK\") {\n\t\treturn \"METAMASK_WALLET\";\n\t} else if (ethereum || web3 || BinanceChain) {\n\t\treturn \"TRUST_WALLET\";\n\t}\n\treturn \"NULL\";\n};\n\n/*\n * @function: getAccount\n * @returns: account\n */\nconst getAccount = async (type) => {\n\tconst { BinanceChain, ethereum } = window;\n\tconst result = Boolean((ethereum && ethereum.isMetaMask) || BinanceChain);\n\n\tlet account;\n\n\tif (type === \"BINANCE\") {\n\t\taccount = await BinanceChain.enable();\n\t} else if (!result && type === \"TRUST_WALLET\") {\n\t\tconst web3 = await new Web3(window.web3.currentProvider);\n\t\tconst accounts = await web3.eth.getAccounts();\n\t\tlet account = accounts[0];\n\t}else {\n\t\tawait ethereum.on(\"accountsChanged\", async function (accounts) {\n\t\t\taccount = accounts[0];\n\t\t});\n\n\t\taccount = await ethereum.request({ method: \"eth_requestAccounts\" });\n\t}\n\n\treturn account[0];\n};\n\nexport const Web3Service = {\n\tcallWeb3,\n\tCallContract,\n\tisWalletInstalled,\n\tgetAccount,\n\tweb3,\n};\n","/Users/navdeep/Documents/votingsystem/votingsystem/src/Pages/Login/Login.js",["198","199","200","201","202","203"],"import React, { useState, useEffect } from \"react\";\n\nimport { Col, Form, DropdownButton, Dropdown } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport logo from '../../assets/images/logo.png'\nimport Button from \"../../Components/Button/Button\";\nimport ConnectWallet from \"../../Components/ConnectWallet\";\nimport { useHistory } from 'react-router'\n\nimport \"./Login.scss\";\n\nconst Login = () => {\n\n    return (\n        <>\n            <Col className=\"page-ath-wrap\">\n\n                <Col md={12} className=\"right-side\">\n                    <div className=\"login_form\">\n                        <div className=\"page-wth-header\">\n                            <Link to=\"/\">\n                                {\" \"}\n                                <img src={logo} />\n                            </Link>\n                        </div>\n                        <div className=\"page-ath-form\">\n                            <ConnectWallet />\n                            <Form className=\"login-form text-center\" >\n                                <div className=\"text-center mt-3\">\n                                    <Button className=\"bgOrange\" text=\"Login\" />\n                                </div>\n\n                            </Form>\n\n\n\n                        </div>\n                    </div>\n                </Col>\n            </Col>\n\n        </>\n    )\n\n}\nexport default Login","/Users/navdeep/Documents/votingsystem/votingsystem/src/Pages/Home/Declinetab.js",["204","205","206","207","208","209"],"import React from 'react'\nimport { Col, Form, Button, Row, Container } from 'react-bootstrap'\nimport './Home.scss'\n\nimport like from '../../assets/images/like.png'\nimport dislike from '../../assets/images/dislike.png'\nimport user from '../../assets/images/user.png'\nimport comment from '../../assets/images/comment.png'\nimport send from '../../assets/images/send.png'\nimport Wrapper from '../../Components/Wrapper/Wrapper'\n\nconst Declinetab = () => {\n    return (\n        <>\n            <div className='wrapper'>\n                <Wrapper />\n                <div className='right-sidebar'>\n\n\n                    <Col className='bg'>\n                        <Container>\n                            <Row>\n                                <Col md={12} >\n                                    <div className=\" tab-col\">\n\n                                        <Col className=\"live-tab box-bg\">\n                                            <div className='offer-title  theme-bg'>\n                                                <p className='main-title'>\n                                                    Offer Done by 0x00035hji000wj123\n                                                    <span className='danger decined-btn'>Declined</span>\n\n                                                </p>\n                                            </div>\n                                            <div className='offer-title  theme-bg'>\n                                                <h3>NFT Marketplace</h3>\n                                            </div>\n                                            <div className='description'>\n                                                <p>lorem ipsum is simply dummy text of the printing and typesetting industry. lorem ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. it has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. it was popularised in the 1960s with the release of letraset sheets containing lorem ipsum passages, and more recently with desktop publishing software like aldus pagemaker including versions of lorem ipsum.</p>\n                                            </div>\n                                            <div className='viewers-col mb-4'>\n                                                <img src={like} /> <p> 3234</p>\n                                                <img src={dislike} /> <p> 234</p>\n                                                <img src={comment} /> <p> 5646</p>\n\n                                            </div>\n\n                                            <div className='offer-title  theme-bg  comment-form'>\n                                                <Form.Group className=\"mb-3 align-items-center\">\n                                                    <Form.Control type=\"text\" placeholder=\"Write A Comment\" />\n                                                    <Button className='submit-btn' variant=\"primary\" type=\"submit\">\n                                                        <img src={send} />\n                                                    </Button>\n                                                </Form.Group>\n\n                                            </div>\n                                            <div className='recent-cmnt'>\n                                                <p className='cmnt-heading'>Recents Comments</p>\n                                                <div className='comment-sec'>\n                                                    <img src={user} />\n                                                    <div className='cmnt-col'>\n                                                        <h4>Olive Yew.\n                                                            <span className='time'>Mar 10, 2019 at 2:48</span>\n                                                        </h4>\n                                                        <p>lorem ipsum is simply dummy text of the printing and typesetting industry. lorem ipsum has been the industry's standard dummy text ever since the 1500s, when unknown printer took a galley lorem ipsum is simply dummy text of the printing</p>\n                                                    </div>\n                                                </div>\n                                                <div className='comment-sec'>\n                                                    <img src={user} />\n                                                    <div className='cmnt-col'>\n                                                        <h4>Olive Yew.\n                                                            <span className='time'>Mar 10, 2019 at 2:48</span>\n                                                        </h4>\n                                                        <p>lorem ipsum is simply dummy text of the printing and typesetting industry. lorem ipsum has been the industry's standard dummy text ever since the 1500s, when unknown printer took a galley lorem ipsum is simply dummy text of the printing</p>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </Col>\n                                    </div>\n                                </Col>\n                            </Row>\n                        </Container>\n                    </Col>\n                </div>\n\n\n            </div>\n        </>\n    )\n}\n\nexport default Declinetab","/Users/navdeep/Documents/votingsystem/votingsystem/src/Pages/Home/Livetab.js",["210","211","212"],"import React, { useState } from 'react'\nimport { Col, Form, Button, Row, Container } from 'react-bootstrap'\nimport './Home.scss'\nimport Commentmodal from '../../Components/Commentmodal/Commentmodal'\nimport like from '../../assets/images/like.png'\nimport dislike from '../../assets/images/dislike.png'\nimport user from '../../assets/images/user.png'\nimport comment from '../../assets/images/comment.png'\nimport send from '../../assets/images/send.png'\nimport Wrapper from '../../Components/Wrapper/Wrapper'\nimport 'boxicons'\nimport Deletemodal from '../../Common/Deletemodal/Deletemodal'\n\nconst Livetab = (props) => {\n    const [show, setShow] = useState(false);\n    const [trashshow, setDeleteShow] = useState(false);\n    const [isEditing, setisEditing] = useState(false);\n    const [addclass, setAddClass] = useState();\n    const [CommentList, setCommentList] = useState();\n\n    const handleClick = () => {\n        setisEditing(true);\n        setAddClass(prevState => !prevState)\n    }\n    const handleRemoveItem = (e) => {\n        const name = e.target.getAttribute(setCommentList);\n    };\n    const Close = () => setDeleteShow(false);\n    const handleTrash = () => {\n        setDeleteShow(\" \");\n    }\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n\n    return (\n        <>\n            <div className='wrapper'>\n                <Wrapper />\n                <div className='right-sidebar'>\n                    <Col className='bg'>\n                        <Container>\n                            <Row>\n                                <Col md={12} >\n                                    <div className=\" tab-col\">\n\n                                        <Col className=\"live-tab box-bg\">\n                                            <div className='offer-title  theme-bg'>\n                                                <p className='main-title'>\n                                                    Offer Done by 0x00035hji000wj123</p>\n                                            </div>\n                                            <div className='offer-title  theme-bg'>\n                                                <h3>NFT Marketplace</h3>\n                                            </div>\n                                            <div className='description'>\n                                                <p>lorem ipsum is simply dummy text of the printing and typesetting industry. lorem ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. it has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. it was popularised in the 1960s with the release of letraset sheets containing lorem ipsum passages, and more recently with desktop publishing software like aldus pagemaker including versions of lorem ipsum.</p>\n                                            </div>\n                                            <div className='viewers-col mb-4'>\n                                                <Button className='like-btn' variant=\"transparent\" type=\"submit\"> <img src={like} alt='img' />\n                                                </Button>\n                                                <p> 3234</p>\n                                                <Button className='like-btn' variant=\"transparent\" type=\"submit\"><img src={dislike} alt='img' /> </Button><p> 234</p>\n                                                <img onClick={handleShow} src={comment} alt='img' /> <p> 5646</p>\n                                                <Commentmodal show={show} onHide={handleClose} />\n\n                                            </div>\n\n                                            <div className='offer-title  theme-bg  comment-form'>\n                                                <Form.Group className=\"mb-3 align-items-center\">\n                                                    <Form.Control type=\"text\" placeholder=\"Write A Comment\" />\n                                                    <Button className='submit-btn' variant=\"primary\" type=\"submit\">\n                                                        <img src={send} alt='img' />\n                                                    </Button>\n                                                </Form.Group>\n\n                                            </div>\n                                            <div className='recent-cmnt'>\n                                                <p className='cmnt-heading'>Recents Comments</p>\n\n                                                <div className='comment-sec'>\n                                                    <img src={user} />\n                                                    <div className='cmnt-col'>\n                                                        <h4>Olive Yew.\n                                                            <span className='time'>Mar 10, 2019 at 2:48</span>\n                                                            <span className='edit-icon'>\n                                                                <Button onClick={handleClick} className='like-btn' variant=\"transparent\" type=\"submit\"><box-icon name='edit-alt'></box-icon></Button>\n                                                                <Button onClick={handleTrash} className='like-btn' variant=\"transparent\" type=\"submit\"> <box-icon name='trash'></box-icon></Button>\n                                                                <Deletemodal trashshow={trashshow} onClose={Close} Ondelete={handleRemoveItem} />\n                                                            </span>\n                                                        </h4>\n\n\n                                                        <textarea\n\n                                                            className={addclass ? \"edit textarea-comment\" : \"textarea-comment\"}\n                                                            disabled={isEditing ? false : true}\n\n\n                                                        >\n                                                            lorem ipsum is simply dummy text of the\n                                                            printing and typesetting industry. lorem\n                                                            ipsum has been the industry's standard dummy\n                                                            text ever since the 1500s, when unknown printer\n                                                            took a gallery lorem ipsum is simply dummy text of the printing\n                                                        </textarea>\n\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </Col>\n                                    </div>\n                                </Col>\n                            </Row>\n                        </Container>\n                    </Col>\n                </div >\n            </div >\n        </>\n    )\n}\n\nexport default Livetab","/Users/navdeep/Documents/votingsystem/votingsystem/src/Pages/Home/Approvetab.js",["213","214","215","216","217","218","219"],"import React, { useState } from 'react'\nimport { Col, Form, Button, Row, Container } from 'react-bootstrap'\nimport './Home.scss'\n\nimport like from '../../assets/images/like.png'\nimport dislike from '../../assets/images/dislike.png'\nimport user from '../../assets/images/user.png'\nimport comment from '../../assets/images/comment.png'\nimport send from '../../assets/images/send.png'\nimport Wrapper from '../../Components/Wrapper/Wrapper'\nconst Approvetab = () => {\n    const [show, setShow] = useState(false);\n    const handletoggle = () => {\n        setShow(!show);\n    }\n\n    return (\n        <>\n            <div className='wrapper'>\n                <Wrapper />\n                <div className='right-sidebar'>\n\n                    <Col className='bg'>\n                        <Container>\n                            <Row>\n                                <Col md={12} >\n                                    <div className=\" tab-col\">\n\n                                        <Col className=\"live-tab box-bg\">\n                                            <div className='offer-title  theme-bg'>\n                                                <p className='main-title'>\n                                                    Offer Done by 0x00035hji000wj123\n                                                    <span className=' approved-btn'>Approved</span>\n\n                                                </p>\n\n                                            </div>\n                                            <div className='offer-title  theme-bg'>\n                                                <h3>NFT Marketplace</h3>\n                                            </div>\n                                            <div className='description'>\n                                                <p>lorem ipsum is simply dummy text of the printing and typesetting industry. lorem ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. it has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. it was popularised in the 1960s with the release of letraset sheets containing lorem ipsum passages, and more recently with desktop publishing software like aldus pagemaker including versions of lorem ipsum.</p>\n                                            </div>\n                                            <div className='viewers-col mb-4'>\n                                                <img src={like} /> <p> 3234</p>\n                                                <img src={dislike} /> <p> 234</p>\n                                                <img src={comment} /> <p> 5646</p>\n\n                                            </div>\n\n                                            <div className='offer-title  theme-bg  comment-form'>\n                                                <Form.Group className=\"mb-3 align-items-center\">\n                                                    <Form.Control type=\"text\" placeholder=\"Write A Comment\" />\n                                                    <Button className='submit-btn' variant=\"primary\" type=\"submit\">\n                                                        <img src={send} />\n                                                    </Button>\n                                                </Form.Group>\n\n                                            </div>\n                                            <div className='recent-cmnt'>\n                                                <p className='cmnt-heading'>Recents Comments</p>\n                                                <div className='comment-sec'>\n                                                    <img src={user} />\n                                                    <div className='cmnt-col'>\n                                                        <h4>Olive Yew.\n                                                            <span className='time'>Mar 10, 2019 at 2:48</span>\n                                                        </h4>\n                                                        <p>lorem ipsum is simply dummy text of the printing and typesetting industry. lorem ipsum has been the industry's standard dummy text ever since the 1500s, when unknown printer took a galley lorem ipsum is simply dummy text of the printing</p>\n                                                    </div>\n                                                </div>\n                                                <div className='comment-sec'>\n                                                    <img src={user} />\n                                                    <div className='cmnt-col'>\n                                                        <h4>Olive Yew.\n                                                            <span className='time'>Mar 10, 2019 at 2:48</span>\n                                                        </h4>\n                                                        <p>lorem ipsum is simply dummy text of the printing and typesetting industry. lorem ipsum has been the industry's standard dummy text ever since the 1500s, when unknown printer took a galley lorem ipsum is simply dummy text of the printing</p>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </Col>\n                                    </div>\n                                </Col>\n                            </Row>\n                        </Container>\n                    </Col>\n                </div>\n            </div>\n        </>\n    )\n}\n\nexport default Approvetab","/Users/navdeep/Documents/votingsystem/votingsystem/src/Pages/Admin/Dashboard/Dashboard.js",[],"/Users/navdeep/Documents/votingsystem/votingsystem/src/Pages/Admin/Setting/Setting.js",["220","221","222"],"import React, { useState, useEffect } from \"react\";\nimport { Col, Row, Container, Form } from 'react-bootstrap'\nimport Adminwrapper from \"../../../Components/AdminWrapper/AdminWrapper\"\nimport Button from \"../../../Components/Button/Button\";\nimport Input from \"../../../Components/Input/Input\";\n\nimport \"./Setting.scss\";\n\nconst Setting = () => {\n\n    return (\n        <>\n            <div className='wrapper'>\n                <Adminwrapper />\n                <div className='right-sidebar'>\n                    <Col className='bg'>\n                        <Container>\n                            <Row>\n                                <Col md={12} >\n                                    <div className=\"tab-col\">\n\n                                        <Col className=\" box-bg\">\n                                            <Row className=\"setting-col \">\n                                                <Col md={6}>\n                                                    <Input label=\"Update Add\" />\n                                                </Col>\n                                                <Col md={6}>\n                                                    <Input label=\"Update Comment\" />\n                                                </Col>\n                                            </Row>\n                                            <div className=\"text-right\">\n\n                                                <Button text=\"Submit\" />\n                                            </div>\n                                        </Col>\n                                    </div>\n                                </Col>\n                            </Row>\n                        </Container>\n                    </Col>\n                </div >\n            </div >\n        </>\n    )\n\n}\nexport default Setting","/Users/navdeep/Documents/votingsystem/votingsystem/src/redux/actions/loader.js",[],"/Users/navdeep/Documents/votingsystem/votingsystem/src/Components/Button/Button.js",[],"/Users/navdeep/Documents/votingsystem/votingsystem/src/Components/Commentmodal/Commentmodal.js",["223","224"],"import React, { useState } from 'react'\nimport { Modal } from 'react-bootstrap'\nimport user from '../../assets/images/user.png'\n\nconst Commentmodal = (props) => {\n    return (\n        <>\n            <Modal className=\"create-modal comment-modal\" size=\"lg\" show={props.show} onHide={props.onHide}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Comments</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <div className='recent-cmnt'>\n                        <div className='comment-sec'>\n                            <img src={user} alt='img' />\n                            <div className='cmnt-col'>\n                                <h4>Olive Yew.\n                                    <span className='time'>Mar 10, 2019 at 2:48</span>\n                                    <span className='edit-icon'><box-icon name='edit-alt'></box-icon>\n                                        <box-icon name='trash'></box-icon>\n                                    </span>\n                                </h4>\n                                <p>lorem ipsum is simply dummy text of the printing and typesetting industry. lorem ipsum has been the industry's standard dummy text ever since the 1500s, when unknown printer took a galley lorem ipsum is simply dummy text of the printing</p>\n                            </div>\n                        </div>\n                        <div className='comment-sec'>\n                            <img src={user} />\n                            <div className='cmnt-col'>\n                                <h4>Olive Yew.\n                                    <span className='time'>Mar 10, 2019 at 2:48</span>\n                                </h4>\n                                <p>lorem ipsum is simply dummy text of the printing and typesetting industry. lorem ipsum has been the industry's standard dummy text ever since the 1500s, when unknown printer took a galley lorem ipsum is simply dummy text of the printing</p>\n                            </div>\n                        </div>\n                    </div>\n                </Modal.Body>\n\n            </Modal>\n        </>\n    )\n}\nexport default Commentmodal","/Users/navdeep/Documents/votingsystem/votingsystem/src/Components/Button/ButtonOutline.js",[],"/Users/navdeep/Documents/votingsystem/votingsystem/src/Components/Wrapper/Wrapper.js",["225"],"import React, { useState, useEffect } from \"react\";\nimport Leftbar from \"../../Common/Leftbar/Leftbar\";\nimport Header from \"../Header/Header\";\n\n\nconst Wrapper = () => {\n    const [show, setShow] = useState(false);\n\n    const handletoggle = () => {\n\n        setShow(!show)\n    }\n    return (\n        <>\n            <Leftbar show={show} handletoggle={handletoggle} />\n            <div className='right-sidebar'>\n                <Header handletoggle={handletoggle} />\n            </div>\n        </>\n    )\n\n}\nexport default Wrapper","/Users/navdeep/Documents/votingsystem/votingsystem/src/Components/AdminWrapper/AdminWrapper.js",[],"/Users/navdeep/Documents/votingsystem/votingsystem/src/Components/Input/Input.js",[],"/Users/navdeep/Documents/votingsystem/votingsystem/src/Common/Deletemodal/Deletemodal.js",["226","227"],"import React, { useState } from 'react'\nimport { Modal } from 'react-bootstrap'\nimport user from '../../assets/images/user.png'\nimport Button from '../../Components/Button/Button'\nimport ButtonOutline from '../../Components/Button/ButtonOutline'\n\nimport './Deletemodal.scss'\nconst Deletemodal = (props) => {\n    return (\n        <>\n            <Modal className=\"create-modal comment-modal    delete-modal\" size=\"lg\" show={props.trashshow} onHide={props.onClose}>\n                <Modal.Header closeButton>\n                    <Modal.Title></Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <div className='comment-sec justify-content-center'>\n                        <div className='cmnt-col text-center'>\n                            <h3>Are you sure want to delete this</h3>\n                        </div>\n                    </div>\n                </Modal.Body>\n                <Modal.Footer>\n\n                    <ButtonOutline onClick={props.onClose} text=\"Close\" />\n                    <Button text=\"Delete\" onClick={props.handleRemoveItem} />\n\n                </Modal.Footer>\n            </Modal>\n        </>\n    )\n}\nexport default Deletemodal","/Users/navdeep/Documents/votingsystem/votingsystem/src/Components/ConnectWallet/index.js",[],"/Users/navdeep/Documents/votingsystem/votingsystem/src/Common/Adminsidebar/Adminsidebar.js",["228","229","230","231","232","233","234","235"],"import React, { useState } from 'react';\nimport { BrowserRouter as Router, Link } from \"react-router-dom\";\nimport logo from '../../assets/images/logo.png'\nimport live from '../../assets/images/live.png'\nimport decline from '../../assets/images/decline.png'\nimport approve from '../../assets/images/approve.png'\nconst Adminsidebar = (props) => {\n\n\n\n    return (\n        <>\n            <div className={`leftbar ${props.show ? 'show' : 'hide'}`}\n            >\n                <div className='d-flex justify-content-between align-items-center'>\n                    <img src={logo} alt='logo' />\n                    <h4 onClick={props.handletoggle} className='text-white mb-0'>x</h4>\n                </div>\n                <nav>\n                    <ul>\n                        <li>\n                            <Link to=\"/\"> <img src={live} /> Live</Link>\n                        </li>\n                        <li>\n                            <Link to=\"/declined\"><img src={decline} />  Thread Decline</Link>\n                        </li>\n                        <li>\n                            <Link to=\"/approved\"><img src={approve} /> Thread Approved</Link>\n                        </li>\n                        <li>\n                            <Link to=\"/declined\"><img src={decline} />   Decline</Link>\n                        </li>\n                        <li>\n                            <Link to=\"/approved\"><img src={approve} />  Approved</Link>\n                        </li>\n                        <li>\n                            <Link to=\"/pending\"><img src={approve} />  Pending</Link>\n                        </li>\n                    </ul>\n                </nav>\n\n\n            </div>\n\n\n        </>\n    );\n}\n\nexport default Adminsidebar;","/Users/navdeep/Documents/votingsystem/votingsystem/src/Components/Header/Header.js",["236","237","238","239","240"],"import React, { useState, useEffect } from \"react\";\nimport \"./Header.scss\";\nimport ConnectWallet from \"../ConnectWallet\"\nimport { Container, Row } from \"react-bootstrap\";\nimport ButtonOutline from \"../Button/ButtonOutline\";\nimport Createmodal from \"../Createmodal/Createmodal\";\nimport setting from '../../assets/images/settings.png'\nimport logo from '../../assets/images/mobile-logo.png'\nimport usericon from '../../assets/images/user-icon.png'\nimport { getTokenBalanceServiceAction, getCreationFeeAction } from \"../../redux/actions/user.action\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { COMT_TOKEN_CONTRACT, CVP_TOKEN_CONTRACT } from \"../../constant\";\n\nconst Header = (props) => {\n  const dispatch = useDispatch();\n  const [show, setShow] = useState(false);\n  const [creationFee, setCreationFee] = useState(0);\n  const [userCOMTBalance, setUserCOMTBalance] = useState(\"\");\n  const [comtTokenDecimals, setComtTokenDecimals] = useState(\"\");\n\n\n  const user = useSelector((state) =>\n    state.user.walletAddress ? state.user : false\n  );\n  useEffect(() => {\n    onInit();\n  }, []);\n  const onInit = async () => {\n    if (user) {\n      //get COMT token details based on user\n      const comtTokenInfo = await dispatch(\n        getTokenBalanceServiceAction(user.wallet, {\n          tokenAddress: COMT_TOKEN_CONTRACT,\n          walletAddress: user.walletAddress\n        })\n      );\n      // get CVP token details based on user\n      // const cvpTokenInfo = await dispatch(\n      //   getTokenBalanceServiceAction(user.wallet,{\n      //     tokenAddress: CVP_TOKEN_CONTRACT,\n      //     walletAddress:user.walletAddress\n      //   })\n      // );\n      if (comtTokenInfo) {\n        //get project creation fee\n        const proposalCreationFee = await dispatch(\n          getCreationFeeAction(user.wallet)\n        );\n        if (proposalCreationFee) {\n          setCreationFee(proposalCreationFee / comtTokenInfo?.tokenDecimals);\n        }\n        //set user comt balance\n        setUserCOMTBalance(comtTokenInfo?.tokenBalance / comtTokenInfo?.tokenDecimals);\n        setComtTokenDecimals(comtTokenInfo?.tokenDecimals);\n      }\n    }\n\n  }\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  return (\n    <div className=\"topheader\">\n      <Container>\n        <Row>\n          <div className=\"mainHeader\">\n            <div className=\"logo d-flex\">\n              <img onClick={props.handletoggle} src={logo} />\n              <p>Project</p>\n            </div>\n\n            {props.type === 'admin' ?\n              <div className=\"btnDiv admin-header d-flex\">\n                <p className=\"setting-label\"><img src={setting} /> Settings</p>\n                <span className=\"user-icon\"> <img src={usericon} /></span>\n              </div>\n              : <div className=\"btnDiv\">\n                <ButtonOutline onClick={handleShow} text=\"Create\" />\n                <Createmodal show={show}\n                  onHide={handleClose}\n                  userComtBalance={userCOMTBalance}\n                  creationFee={creationFee}\n                  comtTokenDecimals={comtTokenDecimals}\n                />\n                <ConnectWallet />\n              </div>\n            }\n\n          </div>\n        </Row>\n      </Container>\n    </div>\n  );\n};\n\nexport default Header;\n","/Users/navdeep/Documents/votingsystem/votingsystem/src/Common/Leftbar/Leftbar.js",["241","242","243","244","245","246"],"import React, { useState } from 'react';\nimport { BrowserRouter as Router, NavLink, Link } from \"react-router-dom\";\nimport logo from '../../assets/images/logo.png'\nimport live from '../../assets/images/live.png'\nimport decline from '../../assets/images/decline.png'\nimport approve from '../../assets/images/approve.png'\nimport './Leftbar.scss'\nconst Leftbar = (props) => {\n\n\n\n    return (\n        <>\n            <div className={`leftbar ${props.show ? 'show' : 'hide'}`}\n            >\n                <div className='d-flex  sidebar-logo align-items-center'>\n                    <img src={logo} alt='logo' />\n                    <h4 onClick={props.handletoggle} className='text-white mb-0'>x</h4>\n                </div>\n                <nav>\n                    <ul>\n                        <li>\n                            <NavLink activeClassName=\"active\" to=\"/\"> <img src={live} /> Live</NavLink>\n                        </li>\n\n                        <li>\n                            <NavLink to=\"/declined\"><img src={decline} />  Declined</NavLink>\n                        </li>\n                        <li>\n                            <NavLink to=\"/approved\"><img src={approve} /> Approved</NavLink>\n                        </li>\n                    </ul>\n                </nav>\n\n\n            </div>\n\n\n        </>\n    );\n}\n\nexport default Leftbar;","/Users/navdeep/Documents/votingsystem/votingsystem/src/services/CommonService.js",["247"],"import BigNumber from \"big-number\";\nimport moment from \"moment\";\n\nconst convertWithDecimal = (value, decimal) => {\n  if (value > 0) {\n    if (isInt(value)) {\n      value = parseInt(value);\n      value = BigNumber(value).multiply(decimal);\n    } else {\n      value = value * decimal;\n      value = toFixed(value);\n      value = parseInt(value.toString().split(\".\")[0]);\n      value = toFixed(value);\n      value = BigNumber(value);\n    }\n    return value.toString();\n  } else {\n    return 0;\n  }\n};\n\nconst toFixed = (x) => {\n  if (Math.abs(x) < 1.0) {\n    var e = parseInt(x.toString().split(\"e-\")[1]);\n    if (e) {\n      x *= Math.pow(10, e - 1);\n      x = \"0.\" + new Array(e).join(\"0\") + x.toString().substring(2);\n    }\n  } else {\n    var e = parseInt(x.toString().split(\"+\")[1]);\n    if (e > 20) {\n      e -= 20;\n      x /= Math.pow(10, e);\n      x += new Array(e + 1).join(\"0\");\n    }\n  }\n  return x;\n};\n\nconst isInt = (n) => {\n  return n % 1 === 0;\n};\n\nconst getError = (error) => {\n  console.log(\"error -\", error)\n  let errorMsg =\n    error && error.message ? error.message : \"Something went wrong\";\n  if (errorMsg.indexOf(\"Internal JSON-RPC error\") > -1) {\n    let msg = errorMsg.replace(\"Internal JSON-RPC error.\", \"\");\n    msg = JSON.parse(msg);\n    return msg.message.split(\":\")[2];\n  } else if (errorMsg.indexOf(\"INVALID_ARGUMENT\") > -1) {\n    return errorMsg.split(\"(\")[0];\n  } else {\n    return errorMsg;\n  }\n};\n\nconst custmizeAddress = (address) => {\n  let firstFive = address.substring(0, 5);\n  let lastFour = address.substr(address.length - 4);\n  return firstFive + \"...\" + lastFour;\n};\n\nconst getCoinType = (type) => {\n  type = type.toLowerCase();\n  type = type === \"defi\" ? 1 : type === \"chain\" ? 2 : type === \"nft\" ? 3 : 0;\n  return type;\n};\n\n\nconst fixedToDecimal = (value, decimals = 2) => {\n  value = value && parseFloat(value) > 0 ? value.toString().match(/^-?\\d+(?:\\.\\d{0,2})?/)[0] : 0\n  return value;\n};\n\nconst secondsToDays = (sec) => {\n  var seconds = parseInt(sec, 10);\n  var days = Math.floor(seconds / (3600 * 24));\n  seconds -= days * 3600 * 24;\n  var hrs = Math.floor(seconds / 3600);\n  seconds -= hrs * 3600;\n  var mnts = Math.floor(seconds / 60);\n  seconds -= mnts * 60;\n  let result = '';\n  if (days > 0) {\n    result = result + days + \" days \"\n  }\n  if (hrs > 0) {\n    result = result + hrs + \" Hrs \"\n  }\n  if (mnts > 0) {\n    result = result + mnts + \" Minutes \"\n  }\n  if (seconds > 0) {\n    result = result + seconds + \" Seconds\"\n  }\n  return result;\n};\n\nconst calculateTimeLeft = async (timestamp) => {\n  let timeleft;\n  let data = new Date((timestamp) * 1000);\n  let betTime = moment.utc(data);\n  let leftDays = moment.duration(moment(betTime).diff(moment()));\n  let days = parseInt(leftDays.asDays())\n  let hrs = parseInt(leftDays.asHours() % 24)\n  let min = parseInt(leftDays.asMinutes()) % 60;\n  let sec = parseInt(leftDays.asSeconds()) % 60;\n  if (days >= 0 &&\n    hrs >= 0 &&\n    min >= 0 &&\n    sec >= 0) {\n    if (days > 0) {\n      timeleft = days + \" d : \" + hrs + \"h : \" + min + \"m : \" + sec + \"s\";\n    } else if (hrs > 0) {\n      timeleft = hrs + \"h : \" + min + \"m : \" + sec + \"s\";\n    } else if (min > 0) {\n      timeleft = min + \"m : \" + sec + \"s\";\n    } else if (sec > 0) {\n      timeleft = sec + \"s\";\n    }\n  } else {\n    timeleft = \"Ended\"\n  }\n  return timeleft\n}\n\nconst getMilliseconds = (value) => {\n  let data = 60 * 60 * 24 * value;\n  return data;\n};\n\nconst allowOnlyNumber = (value) => {\n  const regex = /^\\d*\\.?\\d{0,18}$/gm;\n  var re = new RegExp(regex);\n  if (re.test(value)) {\n    return true;\n  } else {\n    return false;\n  }\n};\n\nexport const CommonService = {\n  convertWithDecimal,\n  toFixed,\n  getError,\n  custmizeAddress,\n  getCoinType,\n  fixedToDecimal,\n  secondsToDays,\n  calculateTimeLeft,\n  getMilliseconds,\n  allowOnlyNumber\n};\n","/Users/navdeep/Documents/votingsystem/votingsystem/src/redux/actions/user.action.js",[],"/Users/navdeep/Documents/votingsystem/votingsystem/src/Components/Createmodal/Createmodal.js",["248","249"],"import React, { useState } from \"react\";\nimport { Modal, Form } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Button from \"../Button/Button\";\nimport \"./Createmodal.scss\";\nimport { toast } from \"../Toast/Toast\";\nimport { CommonService } from \"../../services/CommonService\";\nimport { apiCallPost } from \"../../services/axios\";\nimport { API_HOST, COMT_TOKEN_CONTRACT } from \"../../constant\";\nimport { PROPOSAL_CREATE_ENDPOINT } from \"../../constants/apiEndPoint\";\nimport {\n\tmakeProposalAction,\n\ttoGetAllowanceInfoAction,\n\ttoSetApprovalForCreateThreadAction,\n} from \"../../redux/actions/user.action\";\n\nconst Createmodal = (props) => {\n\t//console.log('props :>> ', props);\n\tconst dispatch = useDispatch();\n\tconst user = useSelector((state) =>\n\t\tstate.user.walletAddress ? state.user : false\n\t);\n\tconst [name, setName] = useState(\"\");\n\tconst [description, setDescription] = useState(\"\");\n\t// const [commitment, setCommitment] = useState(\"\");\n\tconst [durationInDays, setDurationInDays] = useState(\"\");\n\n\t/**\n\t * handlers block\n\t */\n\tconst createProposalHandler = async (e) => {\n\t\ttry {\n\t\t\te.preventDefault();\n\t\t\tif (!user) {\n\t\t\t\treturn toast.error(\"Please connect to the wallet.\");\n\t\t\t}\n\t\t\t//check if user has required balance of COMT token\n\t\t\tif (props?.userComtBalance < props?.creationFee) {\n\t\t\t\treturn toast.error(\n\t\t\t\t\t`You need minimum balance of ${props?.creationFee} COMT to create proposal `\n\t\t\t\t);\n\t\t\t}\n\t\t\t//check for allowance\n\t\t\tconst checkAllowance = await dispatch(\n\t\t\t\ttoGetAllowanceInfoAction(user.wallet, {\n\t\t\t\t\twalletAddress: user.walletAddress,\n\t\t\t\t\taddress: COMT_TOKEN_CONTRACT,\n\t\t\t\t})\n\t\t\t);\n\t\t\tif (Number(checkAllowance) <= 0) {\n\t\t\t\t//set approval\n\t\t\t\tawait dispatch(\n\t\t\t\t\ttoSetApprovalForCreateThreadAction(user.wallet, user.walletAddress)\n\t\t\t\t);\n\n\t\t\t} else {\n\t\t\t\t//set proposal data\n\t\t\t\tconst data = {};\n\t\t\t\tdata.title = name;\n\t\t\t\tdata.description = description;\n\t\t\t\tdata.commitment = CommonService.convertWithDecimal(\n\t\t\t\t\tprops?.creationFee,\n\t\t\t\t\tprops?.comtTokenDecimals\n\t\t\t\t);\n\t\t\t\tdata.duration = CommonService.getMilliseconds(durationInDays);\n\t\t\t\tdata.creator_wallet_address = user.walletAddress;\n\t\t\t\tif (data) {\n\t\t\t\t\tlet makeProposalApi = await apiCallPost(\n\t\t\t\t\t\tAPI_HOST + PROPOSAL_CREATE_ENDPOINT,\n\t\t\t\t\t\tdata\n\t\t\t\t\t);\n\t\t\t\t\tif (makeProposalApi.status == 200) {\n\t\t\t\t\t\t//contract interaction\n\t\t\t\t\t\tconst sendToVotingContract = await dispatch(\n\t\t\t\t\t\t\tmakeProposalAction(user.wallet, {\n\t\t\t\t\t\t\t\tid: makeProposalApi.data,\n\t\t\t\t\t\t\t\tduration: data.duration,\n\t\t\t\t\t\t\t\twalletAddress: user.walletAddress,\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t);\n\t\t\t\t\t\tif (sendToVotingContract && sendToVotingContract.status) {\n\t\t\t\t\t\t\tsetName(\"\");\n\t\t\t\t\t\t\tsetDescription(\"\");\n\t\t\t\t\t\t\tsetDurationInDays(\"\");\n\t\t\t\t\t\t\tprops.onHide();\n\t\t\t\t\t\t\ttoast.success(\"Proposal created successfully\");\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttoast.error(`Error ${makeProposalApi.message}`);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t} catch (err) {\n\t\t\tconsole.error(\"Error under createProposalHandler\", err);\n\t\t\t//toast.error(\"Something went wrong while creating proposal\");\n\t\t}\n\t};\n\t/**\n\t * END handlers\n\t */\n\n\treturn (\n\t\t<>\n\t\t\t<Modal className=\"create-modal\" show={props.show} onHide={props.onHide}>\n\t\t\t\t<Modal.Header closeButton>\n\t\t\t\t\t<Modal.Title>\n\t\t\t\t\t\tCreate Proposal\n\t\t\t\t\t\t{/* <p className='proposa-add'>0x386c930y2hue7b7f9c8</p> */}\n\t\t\t\t\t</Modal.Title>\n\t\t\t\t</Modal.Header>\n\t\t\t\t<Modal.Body>\n\t\t\t\t\t<Form\n\t\t\t\t\t\tclassName=\"offer-title  theme-bg  comment-form\"\n\t\t\t\t\t\tonSubmit={(e) => createProposalHandler(e)}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Form.Group className=\"mb-4 align-items-center\">\n\t\t\t\t\t\t\t<label>Name</label>\n\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tplaceholder=\"Eg  Aryan Khana \"\n\t\t\t\t\t\t\t\tvalue={name}\n\t\t\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\t\t\tsetName(e.target.value);\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t<Form.Group className=\"mb-4 align-items-center\">\n\t\t\t\t\t\t\t<label>Description</label>\n\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tplaceholder=\"More than 50 words \"\n\t\t\t\t\t\t\t\tvalue={description}\n\t\t\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\t\t\tsetDescription(e.target.value);\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t<Form.Group className=\"mb-4 align-items-center\">\n\t\t\t\t\t\t\t<label>Commitment Required</label>\n\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\treadOnly\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tplaceholder=\"100000 COMT \"\n\t\t\t\t\t\t\t\tdefaultValue={props?.creationFee}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t<Form.Group className=\"mb-4 align-items-center\">\n\t\t\t\t\t\t\t<label>Duration In Days</label>\n\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tplaceholder=\"2 Days\"\n\t\t\t\t\t\t\t\tvalue={durationInDays}\n\t\t\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\t\t\tlet result = CommonService.allowOnlyNumber(e.target.value);\n\t\t\t\t\t\t\t\t\tif (result == true) {\n\t\t\t\t\t\t\t\t\t\tsetDurationInDays(e.target.value);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t<Button className=\"w-100 modal-btn\" text=\"Create\" type=\"submit\" />\n\t\t\t\t\t</Form>\n\t\t\t\t</Modal.Body>\n\t\t\t</Modal>\n\t\t</>\n\t);\n};\nexport default Createmodal;\n","/Users/navdeep/Documents/votingsystem/votingsystem/src/services/common/CommonMethodService.js",[],"/Users/navdeep/Documents/votingsystem/votingsystem/src/services/common/InstanceService.js",["250","251"],"import Web3 from \"web3\";\nimport { COMT_TOKEN_CONTRACT, CVP_TOKEN_CONTRACT, VOTING_CONTRACT } from \"../../constant\";\nimport dynamicAbi from '../../abis/DynamicAbi.json';\nimport votingAbi from '../../abis/VotingAbi.json';\n\n/**\n * Variable declarations\n */\nlet web3Instance, dynamicTokenComtInstance, dynamicTokenCvpInstance, votingContractInstance;\n/**\n * End of variable declarations\n */\n\nconst instanceInit = async () => {\n    try {\n        const { ethereum } = window;\n        web3Instance = new Web3(ethereum);\n\n        //dynamic comt instance\n        dynamicTokenComtInstance = new web3Instance.eth.Contract(dynamicAbi, COMT_TOKEN_CONTRACT);\n        //dynamic cvp instance\n        dynamicTokenCvpInstance = new web3Instance.eth.Contract(dynamicAbi, CVP_TOKEN_CONTRACT);\n        //voting contract instance\n        votingContractInstance = new web3Instance.eth.Contract(votingAbi, VOTING_CONTRACT);\n    } catch (err) {\n        console.error('Error under instanceInit ', err);\n    }\n};\n//init instance handler\ninstanceInit();\n\n\n\n//Instance for CVP token contract\nconst tokenCvpContractInstanceHandler = async (walletType) => {\n  try {\n    if (walletType === \"MetaMask\") {\n      let initInstance = await new Web3(window.ethereum);\n      return await new initInstance.eth.Contract(\n        dynamicAbi,\n        CVP_TOKEN_CONTRACT\n      );\n    } else if (walletType === \"BinanceWallet\") {\n      let initInstance = await new Web3(window.BinanceChain);\n      return await new initInstance.eth.Contract(\n        dynamicAbi,\n        CVP_TOKEN_CONTRACT\n      );\n    }else if (walletType === \"TrustWallet\") {\n      let initInstance = await new Web3(window.ethereum);\n      return await new initInstance.eth.Contract(\n        dynamicAbi,\n        CVP_TOKEN_CONTRACT\n      );\n    } else {\n      if (votingContractInstance) {\n        return votingContractInstance;\n      }\n    }\n  } catch (err) {\n    console.log(\"Error on tokenCvpContractInstanceHandler\", err);\n    throw new Error(\"Error on tokenCvpContractInstanceHandler\");\n  }\n};\n\n\n\n//Instance for COMT token contract\nconst tokenComtContractInstanceHandler = async (walletType) => {\n  try {\n    if (walletType === \"MetaMask\") {\n      let initInstance = await new Web3(window.ethereum);\n      return await new initInstance.eth.Contract(\n        dynamicAbi,\n        COMT_TOKEN_CONTRACT\n      );\n    } else if (walletType === \"BinanceWallet\") {\n      let initInstance = await new Web3(window.BinanceChain);\n      return await new initInstance.eth.Contract(\n        dynamicAbi,\n        COMT_TOKEN_CONTRACT\n      );\n    }else if (walletType === \"TrustWallet\") {\n      let initInstance = await new Web3(window.ethereum);\n      return await new initInstance.eth.Contract(\n        dynamicAbi,\n        COMT_TOKEN_CONTRACT\n      );\n    } else {\n      if (votingContractInstance) {\n        return votingContractInstance;\n      }\n    }\n  } catch (err) {\n    console.log(\"Error on tokenComtContractInstanceHandler\", err);\n    throw new Error(\"Error on tokenComtContractInstanceHandler\");\n  }\n};\n\n\n\n//Instance for COMT token contract\nconst votingContractInstanceHandler = async (walletType) => {\n  try {\n    if (walletType === \"MetaMask\") {\n      let initInstance = await new Web3(window.ethereum);\n      return await new initInstance.eth.Contract(\n        votingAbi,\n        VOTING_CONTRACT\n      );\n    } else if (walletType === \"BinanceWallet\") {\n      let initInstance = await new Web3(window.BinanceChain);\n      return await new initInstance.eth.Contract(\n         votingAbi,\n        VOTING_CONTRACT\n      );\n    }else if (walletType === \"TrustWallet\") {\n      let initInstance = await new Web3(window.ethereum);\n      return await new initInstance.eth.Contract(\n         votingAbi,\n        VOTING_CONTRACT\n      );\n    } else {\n      if (votingContractInstance) {\n        return votingContractInstance;\n      }\n    }\n  } catch (err) {\n    console.log(\"Error on votingContractInstanceHandler\", err);\n    throw new Error(\"Error on votingContractInstanceHandler\");\n  }\n};\n\n\n\nexport const ContractInstanceHandler = {\n\ttokenCvpContractInstanceHandler,\n    tokenComtContractInstanceHandler,\n    votingContractInstanceHandler\n};\n","/Users/navdeep/Documents/votingsystem/votingsystem/src/services/axios.js",[],"/Users/navdeep/Documents/votingsystem/votingsystem/src/constants/apiEndPoint.js",[],"/Users/navdeep/Documents/votingsystem/votingsystem/src/redux/constant/response.js",[],{"ruleId":"252","severity":1,"message":"253","line":15,"column":6,"nodeType":"254","endLine":15,"endColumn":8,"suggestions":"255"},{"ruleId":"256","severity":1,"message":"257","line":1,"column":17,"nodeType":"258","messageId":"259","endLine":1,"endColumn":25},{"ruleId":"256","severity":1,"message":"260","line":112,"column":7,"nodeType":"258","messageId":"259","endLine":112,"endColumn":14},{"ruleId":"256","severity":1,"message":"257","line":1,"column":17,"nodeType":"258","messageId":"259","endLine":1,"endColumn":25},{"ruleId":"256","severity":1,"message":"261","line":1,"column":27,"nodeType":"258","messageId":"259","endLine":1,"endColumn":36},{"ruleId":"256","severity":1,"message":"262","line":3,"column":21,"nodeType":"258","messageId":"259","endLine":3,"endColumn":35},{"ruleId":"256","severity":1,"message":"263","line":3,"column":37,"nodeType":"258","messageId":"259","endLine":3,"endColumn":45},{"ruleId":"256","severity":1,"message":"264","line":8,"column":10,"nodeType":"258","messageId":"259","endLine":8,"endColumn":20},{"ruleId":"265","severity":1,"message":"266","line":23,"column":33,"nodeType":"267","endLine":23,"endColumn":51},{"ruleId":"265","severity":1,"message":"266","line":41,"column":49,"nodeType":"267","endLine":41,"endColumn":67},{"ruleId":"265","severity":1,"message":"266","line":42,"column":49,"nodeType":"267","endLine":42,"endColumn":70},{"ruleId":"265","severity":1,"message":"266","line":43,"column":49,"nodeType":"267","endLine":43,"endColumn":70},{"ruleId":"265","severity":1,"message":"266","line":51,"column":57,"nodeType":"267","endLine":51,"endColumn":75},{"ruleId":"265","severity":1,"message":"266","line":59,"column":53,"nodeType":"267","endLine":59,"endColumn":71},{"ruleId":"265","severity":1,"message":"266","line":68,"column":53,"nodeType":"267","endLine":68,"endColumn":71},{"ruleId":"256","severity":1,"message":"268","line":19,"column":12,"nodeType":"258","messageId":"259","endLine":19,"endColumn":23},{"ruleId":"256","severity":1,"message":"269","line":26,"column":15,"nodeType":"258","messageId":"259","endLine":26,"endColumn":19},{"ruleId":"265","severity":1,"message":"266","line":81,"column":53,"nodeType":"267","endLine":81,"endColumn":71},{"ruleId":"256","severity":1,"message":"270","line":13,"column":11,"nodeType":"258","messageId":"259","endLine":13,"endColumn":23},{"ruleId":"265","severity":1,"message":"266","line":45,"column":49,"nodeType":"267","endLine":45,"endColumn":67},{"ruleId":"265","severity":1,"message":"266","line":46,"column":49,"nodeType":"267","endLine":46,"endColumn":70},{"ruleId":"265","severity":1,"message":"266","line":47,"column":49,"nodeType":"267","endLine":47,"endColumn":70},{"ruleId":"265","severity":1,"message":"266","line":55,"column":57,"nodeType":"267","endLine":55,"endColumn":75},{"ruleId":"265","severity":1,"message":"266","line":63,"column":53,"nodeType":"267","endLine":63,"endColumn":71},{"ruleId":"265","severity":1,"message":"266","line":72,"column":53,"nodeType":"267","endLine":72,"endColumn":71},{"ruleId":"256","severity":1,"message":"257","line":1,"column":17,"nodeType":"258","messageId":"259","endLine":1,"endColumn":25},{"ruleId":"256","severity":1,"message":"261","line":1,"column":27,"nodeType":"258","messageId":"259","endLine":1,"endColumn":36},{"ruleId":"256","severity":1,"message":"271","line":2,"column":31,"nodeType":"258","messageId":"259","endLine":2,"endColumn":35},{"ruleId":"256","severity":1,"message":"257","line":1,"column":17,"nodeType":"258","messageId":"259","endLine":1,"endColumn":25},{"ruleId":"265","severity":1,"message":"266","line":27,"column":29,"nodeType":"267","endLine":27,"endColumn":47},{"ruleId":"256","severity":1,"message":"261","line":1,"column":27,"nodeType":"258","messageId":"259","endLine":1,"endColumn":36},{"ruleId":"256","severity":1,"message":"257","line":1,"column":17,"nodeType":"258","messageId":"259","endLine":1,"endColumn":25},{"ruleId":"256","severity":1,"message":"272","line":3,"column":8,"nodeType":"258","messageId":"259","endLine":3,"endColumn":12},{"ruleId":"256","severity":1,"message":"257","line":1,"column":17,"nodeType":"258","messageId":"259","endLine":1,"endColumn":25},{"ruleId":"256","severity":1,"message":"273","line":2,"column":27,"nodeType":"258","messageId":"259","endLine":2,"endColumn":33},{"ruleId":"265","severity":1,"message":"266","line":22,"column":43,"nodeType":"267","endLine":22,"endColumn":61},{"ruleId":"265","severity":1,"message":"266","line":25,"column":50,"nodeType":"267","endLine":25,"endColumn":71},{"ruleId":"265","severity":1,"message":"266","line":28,"column":50,"nodeType":"267","endLine":28,"endColumn":71},{"ruleId":"265","severity":1,"message":"266","line":31,"column":50,"nodeType":"267","endLine":31,"endColumn":71},{"ruleId":"265","severity":1,"message":"266","line":34,"column":50,"nodeType":"267","endLine":34,"endColumn":71},{"ruleId":"265","severity":1,"message":"266","line":37,"column":49,"nodeType":"267","endLine":37,"endColumn":70},{"ruleId":"256","severity":1,"message":"274","line":12,"column":31,"nodeType":"258","messageId":"259","endLine":12,"endColumn":49},{"ruleId":"252","severity":1,"message":"253","line":27,"column":6,"nodeType":"254","endLine":27,"endColumn":8,"suggestions":"275"},{"ruleId":"265","severity":1,"message":"266","line":68,"column":15,"nodeType":"267","endLine":68,"endColumn":62},{"ruleId":"265","severity":1,"message":"266","line":74,"column":46,"nodeType":"267","endLine":74,"endColumn":67},{"ruleId":"265","severity":1,"message":"266","line":75,"column":46,"nodeType":"267","endLine":75,"endColumn":68},{"ruleId":"256","severity":1,"message":"257","line":1,"column":17,"nodeType":"258","messageId":"259","endLine":1,"endColumn":25},{"ruleId":"256","severity":1,"message":"273","line":2,"column":27,"nodeType":"258","messageId":"259","endLine":2,"endColumn":33},{"ruleId":"256","severity":1,"message":"276","line":2,"column":44,"nodeType":"258","messageId":"259","endLine":2,"endColumn":48},{"ruleId":"265","severity":1,"message":"266","line":23,"column":71,"nodeType":"267","endLine":23,"endColumn":89},{"ruleId":"265","severity":1,"message":"266","line":27,"column":53,"nodeType":"267","endLine":27,"endColumn":74},{"ruleId":"265","severity":1,"message":"266","line":30,"column":53,"nodeType":"267","endLine":30,"endColumn":74},{"ruleId":"277","severity":1,"message":"278","line":30,"column":9,"nodeType":"258","messageId":"279","endLine":30,"endColumn":10},{"ruleId":"280","severity":1,"message":"281","line":72,"column":33,"nodeType":"282","messageId":"283","endLine":72,"endColumn":35},{"ruleId":"280","severity":1,"message":"281","line":156,"column":21,"nodeType":"282","messageId":"283","endLine":156,"endColumn":23},{"ruleId":"256","severity":1,"message":"284","line":9,"column":19,"nodeType":"258","messageId":"259","endLine":9,"endColumn":43},{"ruleId":"256","severity":1,"message":"285","line":9,"column":45,"nodeType":"258","messageId":"259","endLine":9,"endColumn":68},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'onInit'. Either include it or remove the dependency array.","ArrayExpression",["286"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'account' is assigned a value but never used.","'useEffect' is defined but never used.","'DropdownButton' is defined but never used.","'Dropdown' is defined but never used.","'useHistory' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'CommentList' is assigned a value but never used.","'name' is assigned a value but never used.","'handletoggle' is assigned a value but never used.","'Form' is defined but never used.","'user' is defined but never used.","'Router' is defined but never used.","'CVP_TOKEN_CONTRACT' is defined but never used.",["287"],"'Link' is defined but never used.","no-redeclare","'e' is already defined.","redeclared","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'dynamicTokenComtInstance' is assigned a value but never used.","'dynamicTokenCvpInstance' is assigned a value but never used.",{"desc":"288","fix":"289"},{"desc":"288","fix":"290"},"Update the dependencies array to be: [onInit]",{"range":"291","text":"292"},{"range":"293","text":"292"},[595,597],"[onInit]",[1098,1100]]